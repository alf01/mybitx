From 333656cd41fef2e5f78318469376d564769cf322 Mon Sep 17 00:00:00 2001
From: alf01 <alf88191@gmail.com>
Date: Tue, 31 Jul 2018 16:10:05 +0300
Subject: [PATCH] added multiwallets save on app reload

---
 src/qt/bitcoin.cpp    |   7 +++
 src/qt/bitcoingui.cpp | 101 ++++++++++++++++++++++++++++++++++
 src/qt/bitcoingui.h   |   5 ++
 3 files changed, 113 insertions(+)

diff --git a/src/qt/bitcoin.cpp b/src/qt/bitcoin.cpp
index ff4cc95..a24d700 100644
--- a/src/qt/bitcoin.cpp
+++ b/src/qt/bitcoin.cpp
@@ -507,6 +507,13 @@ void BitcoinApplication::initializeResult(bool success)
         Q_EMIT splashFinished(window); // Make sure splash screen doesn't stick around during shutdown
         quit(); // Exit first main loop invocation
     }
+
+#ifdef ENABLE_WALLET
+
+    window->openPrevWallets();
+
+#endif
+
 }
 
 void BitcoinApplication::shutdownResult()
diff --git a/src/qt/bitcoingui.cpp b/src/qt/bitcoingui.cpp
index 81b7bf4..dd55578 100644
--- a/src/qt/bitcoingui.cpp
+++ b/src/qt/bitcoingui.cpp
@@ -711,6 +711,9 @@ void BitcoinGUI::newWallet()
         QMessageBox::information(this, tr("New Wallet"), QString::fromStdString(error));
         return;
     }
+    else{
+        appendToPrevWallets(file_name);
+    }
     if (!warning.empty()) {
         QMessageBox::information(this, tr("New Wallet"), QString::fromStdString(warning));
     }
@@ -724,10 +727,106 @@ void BitcoinGUI::newWallet()
         QMessageBox::information(this, tr("Open Wallet"), QString::fromStdString(error));
         return;
     }
+    else{
+        appendToPrevWallets(file_name);
+    }
     if (!warning.empty()) {
         QMessageBox::information(this, tr("Open Wallet"), QString::fromStdString(warning));
     }
 }
+
+ void BitcoinGUI::openWalletByPath(QString wallet_path)
+ {
+     if (wallet_path.isEmpty()) return;
+
+     std::string error, warning;
+     if (!m_node.loadWallet(QDir::toNativeSeparators(wallet_path).toStdString(), error, warning)) {
+         QMessageBox::information(this, tr("Open Wallet"), QString::fromStdString(error));
+         return;
+     }
+     if (!warning.empty()) {
+         QMessageBox::information(this, tr("Open Wallet"), QString::fromStdString(warning));
+     }
+ }
+
+ void BitcoinGUI::openPrevWallets()
+ {
+     QSettings settings;
+     QString prevWallets;
+
+     prevWallets = settings.value("strPrevWallets", prevWallets).toString();
+
+     if (!prevWallets.isEmpty()) {
+         QStringList pieces = prevWallets.split( ";" );
+
+         for (int i = 0; i < pieces.length(); i++) {
+             QString wPath = pieces.value(i);
+             if (!wPath.isEmpty()) {
+               openWalletByPath(wPath);
+             }
+         }
+     }
+ }
+
+ void BitcoinGUI::appendToPrevWallets(QString newPath)
+ {
+     newPath = QDir::toNativeSeparators(newPath);
+     QSettings settings;
+     QString prevWallets;
+
+
+     prevWallets = settings.value("strPrevWallets", prevWallets).toString();
+
+
+
+     if (!prevWallets.isEmpty()) {
+         QStringList pieces = prevWallets.split( ";" );
+
+         bool walletExist = false;
+         for (int i = 0; i < pieces.length(); i++) {
+             QString wPath = pieces.value(i);
+
+             if (!wPath.isEmpty() && wPath == newPath) {
+               walletExist = true;
+             }
+         }
+
+         QString defaultWalletPath;
+         defaultWalletPath = settings.value("strDataDir", defaultWalletPath).toString();
+
+         if (QString::compare(newPath, defaultWalletPath, Qt::CaseInsensitive) == 0) // if strings are equal - should return 0
+         {
+             walletExist = true;
+         }
+
+         if (!walletExist) {
+             pieces.append(newPath);
+         }
+
+         QString savedlist = pieces.join(";");
+         settings.setValue("strPrevWallets", savedlist);
+     }
+     else {
+         settings.setValue("strPrevWallets", newPath);
+     }
+ }
+
+ void BitcoinGUI::removeFromPrevWallets(QString newPath)
+ {
+     newPath = QDir::toNativeSeparators(newPath);
+     QSettings settings;
+     QString prevWallets;
+
+     prevWallets = settings.value("strPrevWallets", prevWallets).toString();
+
+     if (!prevWallets.isEmpty()) {
+         QStringList pieces = prevWallets.split( ";" );
+         pieces.removeOne(newPath);
+         QString savedlist = pieces.join(";");
+         settings.setValue("strPrevWallets", savedlist);
+     }
+ }
+
  void BitcoinGUI::closeWallet()
 {
     if (!walletFrame) return;
@@ -740,6 +839,8 @@ void BitcoinGUI::newWallet()
              QMessageBox::Cancel);
      if (retval != QMessageBox::Yes) return;
      wallet_model->requestUnload();
+     removeFromPrevWallets(wallet_model->getDisplayName());
+
 }
 
 void BitcoinGUI::gotoOverviewPage()
diff --git a/src/qt/bitcoingui.h b/src/qt/bitcoingui.h
index 346ac5e..04bd830 100644
--- a/src/qt/bitcoingui.h
+++ b/src/qt/bitcoingui.h
@@ -197,6 +197,11 @@ public Q_SLOTS:
     */
     void updateWalletStatus();
 
+    void openWalletByPath(QString wallet_path);
+    void openPrevWallets();
+    void appendToPrevWallets(QString newPath);
+    void removeFromPrevWallets(QString newPath);
+
 private:
     /** Set the encryption status as shown in the UI.
        @param[in] status            current encryption status
-- 
2.18.0.windows.1

